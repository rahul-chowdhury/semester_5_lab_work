/*
 * shm-client - client program to demonstrate shared memory.
 */
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <stdio.h>
#include <stdlib.h>
#define SHMSZ     27
int fact(int n)
{
	int i,fact=1;
	for(i=1;i<=n;i++)
	fact *=i;
	return fact;
}
main()
{
    int shmid;
    key_t key;
    char *shm;int *a,*b;

    /*
     * We need to get the segment named
     * "5678", created by the server.
     */
    key = 5680;

    /*
     * Locate the segment.
     */
    if ((shmid = shmget(key,2*sizeof(int),IPC_CREAT | 0666)) < 0) {
        perror("shmget");
        exit(1);
    }

    /*
     * Now we attach the segment to our data space.
     */
    if ((shm = shmat(shmid, NULL, 0)) == (char *) -1) {
        perror("shmat");
        exit(1);
    }
   a =(int *) shm;
    //a=(int *)malloc(sizeof(int));
     b =(int *) (shm+sizeof(int));
    //b=(int *)malloc(sizeof(int));
    *a=1,*b=1;

    /*
     * Now read what the server put in the memory.
     */
   /* for (s = shm; *s != '\0'; s++)
        putchar(*s);
    putchar('\n');*/

    /*
     * Finally, change the first character of the 
     * segment to '*', indicating we have read 
     * the segment.
     */
    while(1){
    
    *b = fact(*a);
    sleep(1);
    //printf("a=%d b=%d\n",*a,*b);
    
   
    }
    //printf("factorial of %d is %d\n",*s,*(s+1));
   
    //execl("a.out","",(char *)0);
   
    return 0;
}
